import Vue from "vue";
import Vuex from "vuex";

Vue.use(Vuex);

export default new Vuex.Store({
  state: {
    //data
    courses: {
      html: {
        card: {
          title: "Основы HTML",
          lang: "html",
          desc:
            'Самое первое и самое главное - разметка! Основа основ, без чего не может существовать ни одна веб-страница.<br> "Скелет", который позже обрастает дизайном.',
          status: true,
          img:
            "https://www.worldplaynetworks.com/wp-content/uploads/2017/01/40225186_l.jpg"
        },
        lessons: [
          {
            title: "Основы основ",
            text:
              'Существует множество языков и технологий, которые используются для создания сайтов. Каждый из них отвечает за определенную функцию. Они работают сообща. <br>Например, HTML - за разметку на странице (структура сайта), CSS - за стилизацию на сайте (красоту), JavaScript - за интерактивность и всяческие эффекты на странице (при более глубоком изучении JS откроется намного больше возможностей), PHP - за связь с сервером... И можно перечислять дальше и дальше... Технологии могут сменять друг друга.<br>НО <b>никакой сайт не может обойтись без HTML</b> - разметки. Это некий каркас сайта, его основа. Если нет HTML - нет и сайта. Его мы и рассмотрим подробно в этом и последующих уроках.<br>Для того, чтобы начать работу, нужно сделать базовую разметку. Она выглядит так: <br><code><!DOCTYPE html><br><html lang="en"><br><head><br>//подключаемые модули здесь<br></head><br><body><br>//разметка здесь<br></body><br></html></code><br><b>Коротко о каждом из тегов</b>. Далее мы разберем их чуть подробнее.<br><h3>HEAD = голова</h3><p>Здесь происходит подключение всех дополнительных файлов, мета-тегов, а также написание заголовка сайта и его ключевых слов</p><br><h3>BODY = тело</h3><p>Это "тело" нашей странички. Здесь находится основная часть кода, а в конце body подключаются скрипты.</p><br><hr><b>ФУХ, хватит теории, давайте уже что-нибудь сделаем)))<b>',
              status: true,
            tasks: [
              {
                title: "Hello, world!",
                text:
                  '<p>По традиции, каждый крутой программист вначале своего пути должен написать "Hello, world!". С этого и начнем:<br>Задание: напишите "Hello, world!(используйте тег <code> <p> </code>)</p>! Не забывайте, что каждый открывающий тег, кроме нескольких исключений, должен иметь и закрывающий',
                exp: [/<p>\s{0,}Hello\s{1,}World!\s{0,}<\Wp>/i],
                status: 0,
                solution: "<code></code>"
              }
            ]
          },
          {
            title: "Основные теги",
            text:
              'Теперь на нашей странице есть "Привет, мир!", обернутый в тег <code>&lt;p&gt;</code>. Этот тег нужен для того, чтобы хранить внутри абзацы текста. Давайте попробуем сделать из абзаца заголовок. Есть несколько типов - h1-h6. h1 - самый большой, h6 - самый маленький. Попробуйте заключить текст в эти теги и почувствуйте разницу.',
              status: false,
            tasks: [
              {},
              {},
              {}
            ]
          },
          {
            title: "Формы ввода",
            text:
              'Формы ввода помогают пользователю вводить данные любого типа. Позже мы научимся отправлять их на сервер и обрабатывать, но сейчас, мы познакомися с тегами, которые помогут нам создать простейшую форму входа',
              status: false,
            tasks: [
              {},
              {}
            ]
          }
        ]
      },
      css: {
        card: {
          title: "CSS",
          lang: "css",
          desc:
            "Магическим образом превращает набор элементов в красивый, полноценный сайт. Благодаря CSS есть такое разнообразие интерфейсов.",
          status: false,
          img: "https://smm.pp.ua/wp-content/uploads/2017/09/css_code-min.jpg"
        }
      },
      js: {
        card: {
          title: "JavaScript",
          lang: "js",
          desc:
            "Настоящее оружие frontend. Очень функциональный язык программирования, с помощью которого можно сделать просто красивую анимацию или написать полноценное приложение.",
          status: false,
          img:
            "https://cdn-images-1.medium.com/max/2000/1*Prm5SZ-OgWQHfI8iBDVjVA.jpeg"
        }
      }
    }
  },
  getters: {
    //почти computed, Только для store
    getLesson: state => id => {
      return state.courses.html.lessons[id];
    },
    getCourse: state => lang => {
      return state.courses[lang];
    },
    getAllCards: state => () => {
      var cards = [];
      for (var lang in state.courses) {
        cards.push(state.courses[lang].card);
      }
      return cards;
    }
  },
  mutations: {
    // изменения объектов state
  },
  actions: {
    //асинхронные действия с данными, например запросы в бд
  }
});
